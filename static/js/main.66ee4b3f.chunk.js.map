{"version":3,"sources":["components/Form.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","heading","className","onChange","event","target","value","id","rows","type","onClick","newText","toUpperCase","toLowerCase","newString","replace","trim","copyText","document","getElementById","select","navigator","clipboard","writeText","split","length","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","aboutText","toggleMode","role","htmlFor","App","setMode","Fragment","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.66ee4b3f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Form(props) {\r\n  const handleUpClick=()=> {\r\n  let newText=text.toUpperCase();\r\n  setText(newText);\r\n  }\r\n  const handleLoClick=()=> {\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    }\r\n    const handleClearClick=()=> {\r\n      setText('');\r\n      }\r\n      const handleSpaceClick=() =>{\r\n      let newString = text.replace(/\\s+/g,' ').trim();\r\n      setText(newString);\r\n      }\r\n      const handleCopyClick=() =>{\r\n        var copyText = document.getElementById(\"exampleFormControlTextarea1\");\r\n         copyText.select();\r\n        //copyText.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copyText.value);\r\n      }\r\n       const handleOnChange =(event) =>{\r\n       setText(event.target.value)\r\n\r\n  }\r\n  const [text,setText]=useState('');\r\n  return (\r\n    <div>\r\n      <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n            <textarea onChange={handleOnChange} className=\"form-control\" id=\"exampleFormControlTextarea1\" value={text} rows=\"6\">\r\n            </textarea>\r\n             </div>\r\n              <button type=\"button\" onClick={handleUpClick} className=\"btn btn-primary my-3 mx-2\">Convert to Uppercase </button >\r\n              <button type=\"button\" onClick={handleLoClick} className=\"btn btn-primary my-3 mx-2\">Convert to Lowercase </button>\r\n             <button type=\"button\" onClick={handleClearClick} className=\"btn btn-primary my-3 mx-2\">Clear all the Text</button>\r\n             <button type=\"button\" onClick={handleSpaceClick} className=\"btn btn-primary my-3 mx-2\">Remove Extra Spaces</button>\r\n             <button type=\"button\" onClick={handleCopyClick} className=\"btn btn-primary my-3 mx-2\">Copy text to Clipboard</button>\r\n            <h2>Text Summary</h2>\r\n            <p>Total words {text.split(' ').length  }</p>\r\n            <p>Total Characters={text.length}</p>\r\n            <p>Time Required to read={text.length*0.008} minutes</p>\r\n             <h2 className='my-3'>Preview</h2>\r\n             <p>{text.length===0 ? \"Enter text above in Textfield to preview it\" : text}</p>\r\n        </div> \r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.aboutText} </a>\r\n        </li>\r\n      </ul>\r\n       {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n  </form> */ }\r\n  <div className=\"form-check form-switch text-light\" >\r\n  <input className=\"form-check-input\" onClick={props.toggleMode}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n</div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Navbar from \"./components/Navbar\";\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const toggleMode=()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor= 'blue';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor= 'white';\n    }\n  }\n  return (\n   \n\n    <>\n    <div className=\"App\">\n      <Navbar title=\"TextUtils\" aboutText='About Us' mode={mode} toggleMode={toggleMode} />\n      <div className=\"container\">\n      <Form heading='Enter the text below to analyse!'></Form>\n      </div>\n    </div></>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}